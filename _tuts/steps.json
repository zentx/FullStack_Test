{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "installation-require-api",
            "name": "Installation: require api",
            "description": null
        },
        {
            "id": "installation-upgrade-doctrine-annotations",
            "name": "Installation: upgrade doctrine\/annotations",
            "description": null
        },
        {
            "id": "installation-configure-db",
            "name": "Installation: configure db",
            "description": null
        },
        {
            "id": "first-resource-install-maker",
            "name": "First Resource: install maker",
            "description": null
        },
        {
            "id": "first-resource-make-entity",
            "name": "First Resource: make:entity",
            "description": null
        },
        {
            "id": "first-resource-install-migrations",
            "name": "First Resource: install migrations",
            "description": null
        },
        {
            "id": "first-resource-make-migration",
            "name": "First Resource: Make migration",
            "description": null
        },
        {
            "id": "hydra-add-var-description",
            "name": "Hydra: Add @var description",
            "description": null
        },
        {
            "id": "profiler-install-debug",
            "name": "Profiler: install debug",
            "description": null
        },
        {
            "id": "operations-configure-to-use-all",
            "name": "Operations: configure to use all",
            "description": null
        },
        {
            "id": "operations-remove-delete-operation",
            "name": "Operations: remove delete operation",
            "description": null
        },
        {
            "id": "operations-configure-shortname",
            "name": "Operations: configure shortName",
            "description": null
        },
        {
            "id": "operations-show-expanded-operation",
            "name": "Operations: show expanded operation",
            "description": null
        },
        {
            "id": "operations-remove-extra-config",
            "name": "Operations: remove extra config",
            "description": null
        },
        {
            "id": "serialization-add-settextdescription",
            "name": "Serialization: Add setTextDescription()",
            "description": null
        },
        {
            "id": "serialization-remove-setdescription",
            "name": "Serialization: remove setDescription()",
            "description": null
        },
        {
            "id": "serialization-remove-setcreatedat",
            "name": "Serialization: remove setCreatedAt()",
            "description": null
        },
        {
            "id": "serialization-install-carbon",
            "name": "Serialization: Install carbon",
            "description": null
        },
        {
            "id": "serialization-getcreatedatago",
            "name": "Serialization: getCreatedAtAgo()",
            "description": null
        },
        {
            "id": "groups-add-normalization-group",
            "name": "Groups: Add normalization group",
            "description": null
        },
        {
            "id": "groups-add-read-group-to-some-props",
            "name": "Groups: add read group to some props",
            "description": null
        },
        {
            "id": "groups-add-denormalization-group",
            "name": "Groups: add denormalization group",
            "description": null
        },
        {
            "id": "groups-add-write-group-to-props",
            "name": "Groups: add write group to props",
            "description": null
        },
        {
            "id": "groups-name-swagger-models",
            "name": "Groups: Name swagger models",
            "description": null
        },
        {
            "id": "groups-add-read-to-getcreatedatago",
            "name": "Groups: add read to getCreatedAtAgo",
            "description": null
        },
        {
            "id": "groups-add-phpdoc-above-method",
            "name": "Groups: Add phpdoc above method",
            "description": null
        },
        {
            "id": "groups-add-settextdescription-to-write-group",
            "name": "Groups: Add setTextDescription to write group",
            "description": null
        },
        {
            "id": "groups-re-add-setdescription",
            "name": "Groups: Re-add setDescription()",
            "description": null
        },
        {
            "id": "groups-default-ispublished",
            "name": "Groups: default isPublished",
            "description": null
        },
        {
            "id": "serializetricks-serializedname",
            "name": "SerializeTricks: @SerializedName",
            "description": null
        },
        {
            "id": "serializetricks-constructor",
            "name": "SerializeTricks: constructor",
            "description": null
        },
        {
            "id": "serializetricks-change-arg-name",
            "name": "SerializeTricks: change arg name",
            "description": null
        },
        {
            "id": "serializetricks-change-back",
            "name": "SerializeTricks: change back",
            "description": null
        },
        {
            "id": "serializetricks-make-optional",
            "name": "SerializeTricks: make optional",
            "description": null
        },
        {
            "id": "filter-add-booleanfilter",
            "name": "Filter: add BooleanFilter",
            "description": null
        },
        {
            "id": "filter-add-missing-use",
            "name": "Filter: add missing use",
            "description": null
        },
        {
            "id": "filter-add-searchfilter",
            "name": "Filter: Add SearchFilter",
            "description": null
        },
        {
            "id": "filter-add-2nd-field-to-searchfilter",
            "name": "Filter: Add 2nd field to SearchFilter",
            "description": null
        },
        {
            "id": "filter-add-rangefilter",
            "name": "Filter: Add RangeFilter",
            "description": null
        },
        {
            "id": "filter-add-getshortdescription",
            "name": "Filter: Add getShortDescription()",
            "description": null
        },
        {
            "id": "filter-add-propertyfilter",
            "name": "Filter: Add PropertyFilter",
            "description": null
        },
        {
            "id": "pagination-add-pagination-items-per-page",
            "name": "Pagination: Add pagination_items_per_page",
            "description": null
        },
        {
            "id": "formats-paste-formats-config",
            "name": "Formats: paste formats config",
            "description": null
        },
        {
            "id": "formats-add-hal",
            "name": "Formats: Add hal",
            "description": null
        },
        {
            "id": "formats-add-csv-to-resource",
            "name": "Formats: Add CSV to resource",
            "description": null
        },
        {
            "id": "validation-add-basic-constraints",
            "name": "Validation: Add basic constraints",
            "description": null
        },
        {
            "id": "user-make-user",
            "name": "User: make:user",
            "description": null
        },
        {
            "id": "user-make-entity-add-username",
            "name": "User: make:entity add username",
            "description": null
        },
        {
            "id": "user-fix-getusername",
            "name": "User: fix getUsername",
            "description": null
        },
        {
            "id": "user-make-username-unique",
            "name": "User: make username unique",
            "description": null
        },
        {
            "id": "user-make-migration",
            "name": "User: make:migration",
            "description": null
        },
        {
            "id": "user-make-apiresource",
            "name": "User: make ApiResource",
            "description": null
        },
        {
            "id": "user-add-serialization-groups",
            "name": "User: Add serialization groups",
            "description": null
        },
        {
            "id": "user-add-validation",
            "name": "User: Add validation",
            "description": null
        },
        {
            "id": "relation-add-cheeselisting-owner",
            "name": "Relation: add CheeseListing.owner",
            "description": null
        },
        {
            "id": "relation-make-migration",
            "name": "Relation: make:migration",
            "description": null
        },
        {
            "id": "relation-expose-cheeselisting-owner",
            "name": "Relation: expose CheeseListing.owner",
            "description": null
        },
        {
            "id": "relation-expose-user-cheeselistings",
            "name": "Relation: Expose User.cheeseListings",
            "description": null
        },
        {
            "id": "relation-embed-user-cheeselistings",
            "name": "Relation: Embed User.cheeseListings",
            "description": null
        },
        {
            "id": "relation-embed-cheeselisting-owner",
            "name": "Relation: embed CheeseListing.owner",
            "description": null
        },
        {
            "id": "relation-only-embed-on-get-item",
            "name": "Relation: only embed on GET item",
            "description": null
        },
        {
            "id": "relation-allow-embedded-write",
            "name": "Relation: allow embedded write",
            "description": null
        },
        {
            "id": "relation-valid-on-cl-owner",
            "name": "Relation: @Valid on CL.owner",
            "description": null
        },
        {
            "id": "relation-set-items-on-collection",
            "name": "Relation: set items on collection",
            "description": null
        },
        {
            "id": "relation-add-new-cl-to-new-user",
            "name": "Relation: add new CL to new User",
            "description": null
        },
        {
            "id": "relation-add-valid-annotation",
            "name": "Relation: Add @Valid annotation",
            "description": null
        },
        {
            "id": "relation-add-orphanremoval",
            "name": "Relation: add orphanRemoval",
            "description": null
        },
        {
            "id": "relation-propertyfilter-on-relation",
            "name": "Relation: PropertyFilter on relation",
            "description": null
        },
        {
            "id": "relationfilter-use-multiple-lines",
            "name": "RelationFilter: use multiple lines",
            "description": null
        },
        {
            "id": "relationfilter-filter-on-cheeselisting-owner",
            "name": "RelationFilter: filter on CheeseListing.owner",
            "description": null
        },
        {
            "id": "relationfilter-filter-on-owner-username",
            "name": "RelationFilter: filter on owner.username",
            "description": null
        },
        {
            "id": "subresource-user-cheeselistings",
            "name": "Subresource: User.cheeseListings",
            "description": null
        },
        {
            "id": "subresource-remove-it",
            "name": "Subresource: remove it",
            "description": null
        },
        {
            "id": "pre-ep2-upgrade-dependencies",
            "name": "Pre Ep2: upgrade dependencies",
            "description": null
        },
        {
            "id": "pre-ep2-updating-recipe",
            "name": "Pre Ep2: updating recipe",
            "description": null
        },
        {
            "id": "pre-ep2-using-auto-encoder",
            "name": "Pre Ep2: using \"auto\" encoder",
            "description": null
        },
        {
            "id": "pre-ep2-add-test-stuff-to-tutorial",
            "name": "Pre Ep2: Add test stuff to tutorial\/",
            "description": null
        },
        {
            "id": "pre-ep2-tweaking-test-dir",
            "name": "Pre Ep2: tweaking Test dir",
            "description": null
        },
        {
            "id": "pre-ep2-install-encore",
            "name": "Pre Ep2: Install encore",
            "description": null
        },
        {
            "id": "pre-ep2-create-entire-vue-frontend",
            "name": "Pre Ep2: create entire vue frontend",
            "description": null
        },
        {
            "id": "swagger-disable-docs",
            "name": "Swagger: disable docs",
            "description": null
        },
        {
            "id": "swagger-disable-entrypoint",
            "name": "Swagger: disable entrypoint",
            "description": null
        },
        {
            "id": "swagger-disable-in-prod",
            "name": "Swagger: disable in prod",
            "description": null
        },
        {
            "id": "swagger-undo-that",
            "name": "Swagger: undo that",
            "description": null
        },
        {
            "id": "jsonlogin-json-login-simple-controller",
            "name": "JsonLogin: json_login + simple controller",
            "description": null
        },
        {
            "id": "jsonlogin-login-ajax-request",
            "name": "JsonLogin: Login AJAX request",
            "description": null
        },
        {
            "id": "jsonlogin-handle-auth-error",
            "name": "JsonLogin: Handle auth error",
            "description": null
        },
        {
            "id": "jsonlogin-show-bad-content-type-header",
            "name": "JsonLogin: show bad content-type header",
            "description": null
        },
        {
            "id": "jsonlogin-error-on-bad-content-type-header",
            "name": "JsonLogin: error on bad Content-Type header",
            "description": null
        },
        {
            "id": "jsonlogin-fix-content-type",
            "name": "JsonLogin: fix Content-Type",
            "description": null
        },
        {
            "id": "jsonlogin-return-location-header-on-success",
            "name": "JsonLogin: return Location header on success",
            "description": null
        },
        {
            "id": "jsonlogin-emitting-vue-authenticated",
            "name": "JsonLogin: emitting Vue authenticated",
            "description": null
        },
        {
            "id": "logout-add-logout-handler",
            "name": "Logout: add logout handler",
            "description": null
        },
        {
            "id": "user-pass-initial-user-from-twig",
            "name": "User: pass initial user from Twig",
            "description": null
        },
        {
            "id": "security-set-collectionoperations",
            "name": "Security: set collectionOperations",
            "description": null
        },
        {
            "id": "security-post-requires-role-user",
            "name": "Security: POST requires ROLE_USER",
            "description": null
        },
        {
            "id": "security-protect-item-operations",
            "name": "Security: protect item operations",
            "description": null
        },
        {
            "id": "test-install-simple-phpunit",
            "name": "Test: install simple-phpunit",
            "description": null
        },
        {
            "id": "test-use-phpunit-8",
            "name": "Test: use PHPUnit 8",
            "description": null
        },
        {
            "id": "test-override-database-url",
            "name": "Test: override DATABASE_URL",
            "description": null
        },
        {
            "id": "test-copy-in-test-directory",
            "name": "Test: copy in Test directory",
            "description": null
        },
        {
            "id": "test-add-test-service",
            "name": "Test: add test service",
            "description": null
        },
        {
            "id": "test-first-simple-test",
            "name": "Test: First simple test",
            "description": null
        },
        {
            "id": "test-test-for-401",
            "name": "Test: test for 401",
            "description": null
        },
        {
            "id": "test-install-http-client",
            "name": "Test: install http-client",
            "description": null
        },
        {
            "id": "test-add-content-type",
            "name": "Test: add Content-Type",
            "description": null
        },
        {
            "id": "test-send-valid-json",
            "name": "Test: send valid JSON",
            "description": null
        },
        {
            "id": "test-create-user-log-in",
            "name": "Test: create user & log in",
            "description": null
        },
        {
            "id": "test-install-alicebundle",
            "name": "Test: install AliceBundle",
            "description": null
        },
        {
            "id": "test-use-reloaddatabasetrait",
            "name": "Test: Use ReloadDatabaseTrait",
            "description": null
        },
        {
            "id": "test-install-monolog-bundle",
            "name": "Test: install monolog-bundle",
            "description": null
        },
        {
            "id": "test-add-customapitestcase-base-class",
            "name": "Test: Add CustomApiTestCase base class",
            "description": null
        },
        {
            "id": "test-encode-password",
            "name": "Test: encode password",
            "description": null
        },
        {
            "id": "test-add-createuserandlogin",
            "name": "Test: add createUserAndLogIn()",
            "description": null
        },
        {
            "id": "test-assert-auth-success-with-400",
            "name": "Test: Assert auth success with 400",
            "description": null
        },
        {
            "id": "test-remove-extra-content-type",
            "name": "Test: remove extra Content-Type",
            "description": null
        },
        {
            "id": "test-add-put-test",
            "name": "Test: Add put test",
            "description": null
        },
        {
            "id": "test-put-403-on-wrong-user",
            "name": "Test: PUT 403 on wrong user",
            "description": null
        },
        {
            "id": "security-only-allow-owners-to-put",
            "name": "Security: only allow owners to PUT",
            "description": null
        },
        {
            "id": "security-access-control-message",
            "name": "Security: access_control_message",
            "description": null
        },
        {
            "id": "security-remove-debug-code",
            "name": "Security: remove debug code",
            "description": null
        },
        {
            "id": "security-test-for-reassigning-owner",
            "name": "Security: test for reassigning owner",
            "description": null
        },
        {
            "id": "security-show-previous-object",
            "name": "Security: show previous_object",
            "description": null
        },
        {
            "id": "security-access-control-for-user",
            "name": "Security: access_control for User",
            "description": null
        },
        {
            "id": "security-use-top-level-access-control",
            "name": "Security: use top-level access_control",
            "description": null
        },
        {
            "id": "voter-make-voter",
            "name": "Voter: make:voter",
            "description": null
        },
        {
            "id": "voter-add-edit-case",
            "name": "Voter: add EDIT case",
            "description": null
        },
        {
            "id": "voter-exception-on-edge-case",
            "name": "Voter: exception on edge case",
            "description": null
        },
        {
            "id": "voter-check-for-role-admin",
            "name": "Voter: check for ROLE_ADMIN",
            "description": null
        },
        {
            "id": "encoding-test-for-user-registration",
            "name": "Encoding: test for user registration",
            "description": null
        },
        {
            "id": "encoding-add-plainpassword-field",
            "name": "Encoding: Add plainPassword field",
            "description": null
        },
        {
            "id": "encoding-remove-password-from-group",
            "name": "Encoding: remove password from group",
            "description": null
        },
        {
            "id": "encoding-customize-getter-setter",
            "name": "Encoding: customize getter\/setter",
            "description": null
        },
        {
            "id": "encoding-erasecredentials",
            "name": "Encoding: eraseCredentials()",
            "description": null
        },
        {
            "id": "encoding-bootstrap-data-persister",
            "name": "Encoding: Bootstrap data persister",
            "description": null
        },
        {
            "id": "encoding-use-entity-manager",
            "name": "Encoding: use entity manager",
            "description": null
        },
        {
            "id": "encoding-encode-password",
            "name": "Encoding: encode password",
            "description": null
        },
        {
            "id": "encoding-rename-field-to-password",
            "name": "Encoding: rename field to password",
            "description": null
        },
        {
            "id": "validationgroups-plainpassword-notblank",
            "name": "ValidationGroups: plainPassword NotBlank",
            "description": null
        },
        {
            "id": "validationgroups-add-test-for-update",
            "name": "ValidationGroups: add test for update",
            "description": null
        },
        {
            "id": "validationgroups-add-create-group",
            "name": "ValidationGroups: add create group",
            "description": null
        },
        {
            "id": "dynamserialization-input-group-for-user-roles",
            "name": "DynamSerialization: input group for User.roles",
            "description": null
        },
        {
            "id": "dynamserialization-add-phonenumber",
            "name": "DynamSerialization: Add phoneNumber",
            "description": null
        },
        {
            "id": "dynamserialization-migration",
            "name": "DynamSerialization: migration",
            "description": null
        },
        {
            "id": "dynamserialization-groups-for-phonenumber",
            "name": "DynamSerialization: groups for phoneNumber",
            "description": null
        },
        {
            "id": "dynamserialization-add-test-for-phonenumber-admin-only",
            "name": "DynamSerialization: Add test for phoneNumber admin-only",
            "description": null
        },
        {
            "id": "dynamserialization-chnage-to-admin-read",
            "name": "DynamSerialization: chnage to admin:read",
            "description": null
        },
        {
            "id": "dynamserialization-copy-in-context-builder",
            "name": "DynamSerialization: Copy in context builder",
            "description": null
        },
        {
            "id": "dynamserialization-add-admin-groups",
            "name": "DynamSerialization: Add admin groups",
            "description": null
        },
        {
            "id": "dynamserialization-test-for-roles-update",
            "name": "DynamSerialization: test for roles update",
            "description": null
        },
        {
            "id": "dynamserialization-change-to-admin-write",
            "name": "DynamSerialization: Change to admin:write",
            "description": null
        },
        {
            "id": "dynamserialization-protect-roles",
            "name": "DynamSerialization: protect roles",
            "description": null
        },
        {
            "id": "autogroups-add-default-groups",
            "name": "AutoGroups: Add default groups",
            "description": null
        },
        {
            "id": "autogroups-empty-resource-factory",
            "name": "AutoGroups: empty resource factory",
            "description": null
        },
        {
            "id": "autogroups-with-resource-factory",
            "name": "AutoGroups: With resource factory",
            "description": null
        },
        {
            "id": "autogroups-remove-custom-groups",
            "name": "AutoGroups: remove custom groups",
            "description": null
        },
        {
            "id": "autogroups-correct-cheeses",
            "name": "AutoGroups: correct cheeses",
            "description": null
        },
        {
            "id": "autogroups-decorates-priority",
            "name": "AutoGroups: decorates priority",
            "description": null
        },
        {
            "id": "normalizer-make-usernormalizer",
            "name": "Normalizer: make UserNormalizer",
            "description": null
        },
        {
            "id": "normalizer-fill-in-dummy-logic",
            "name": "Normalizer: fill in dummy logic",
            "description": null
        },
        {
            "id": "normalizer-fix-missing-json-ld-fields",
            "name": "Normalizer: Fix missing JSON-LD fields",
            "description": null
        },
        {
            "id": "normalizer-fix-recursion",
            "name": "Normalizer: fix recursion",
            "description": null
        },
        {
            "id": "normalizer-return-false-cacheable",
            "name": "Normalizer: return false cacheable",
            "description": null
        },
        {
            "id": "normalizer-check-true-security",
            "name": "Normalizer: check true security",
            "description": null
        },
        {
            "id": "normalizer-fix-phonenumber-test",
            "name": "Normalizer: fix phoneNumber test",
            "description": null
        },
        {
            "id": "normalizer-add-isme-field",
            "name": "Normalizer: Add isMe field",
            "description": null
        },
        {
            "id": "acl-group-to-only-allow-cl-owner-on-post",
            "name": "ACL: group to only allow CL.owner on POST",
            "description": null
        },
        {
            "id": "acl-test-with-bad-cl-owner",
            "name": "ACL: test with bad CL.owner",
            "description": null
        },
        {
            "id": "acl-add-isvalidownervalidator",
            "name": "ACL: Add IsValidOwnerValidator",
            "description": null
        },
        {
            "id": "acl-fill-in-some-validator-logic",
            "name": "ACL: Fill in some validator logic",
            "description": null
        },
        {
            "id": "acl-finishing-validator",
            "name": "ACL: Finishing validator",
            "description": null
        },
        {
            "id": "acl-allow-admin-to-change",
            "name": "ACL: allow admin to change",
            "description": null
        },
        {
            "id": "acl-add-notblank-validation",
            "name": "ACL: add NotBlank validation",
            "description": null
        },
        {
            "id": "auto-owner-enhance-test",
            "name": "Auto-owner: enhance test",
            "description": null
        },
        {
            "id": "auto-owner-create-listener",
            "name": "Auto-owner: create listener",
            "description": null
        },
        {
            "id": "auto-owner-finish-logic",
            "name": "Auto-owner: finish logic",
            "description": null
        },
        {
            "id": "auto-owner-add-tag",
            "name": "Auto-owner: add tag",
            "description": null
        },
        {
            "id": "extension-test-get-cl-collection",
            "name": "Extension: test get CL collection",
            "description": null
        },
        {
            "id": "extension-change-test-for-published",
            "name": "Extension: change test for published",
            "description": null
        },
        {
            "id": "extension-empty-cheeselistingispublishedextension",
            "name": "Extension: Empty CheeseListingIsPublishedExtension",
            "description": null
        },
        {
            "id": "extension-add-ispublished-where",
            "name": "Extension: Add isPublished where",
            "description": null
        },
        {
            "id": "extension-add-admin-exception",
            "name": "Extension: Add admin exception",
            "description": null
        },
        {
            "id": "extension-test-for-single-item",
            "name": "Extension: test for single item",
            "description": null
        },
        {
            "id": "extension-assert-404-on-test",
            "name": "Extension: assert 404 on test",
            "description": null
        },
        {
            "id": "extension-add-extension-item-interface",
            "name": "Extension: add extension item interface",
            "description": null
        },
        {
            "id": "relation-add-failing-test",
            "name": "Relation: add failing test",
            "description": null
        },
        {
            "id": "relation-add-filtered-getter",
            "name": "Relation: add filtered getter",
            "description": null
        },
        {
            "id": "relation-fix-update-published-test",
            "name": "Relation: fix update published test",
            "description": null
        }
    ],
    "sha": "8a927c9bb8b8cf6ec0fb78db4aed514aea00f071"
}